[package]
name = "helios-opstack"
version.workspace = true
edition = "2021"

[[bin]]
name = "server"
path = "./bin/server.rs"

[dependencies]
tokio.workspace = true
eyre.workspace = true
tracing.workspace = true
hex.workspace = true
serde.workspace = true
typenum.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
reqwest.workspace = true
url.workspace = true
futures.workspace = true

# consensus
alloy.workspace = true
alloy-trie.workspace = true
revm.workspace = true
sha2.workspace = true
ethereum_ssz_derive.workspace = true
ethereum_ssz.workspace = true
ssz_types.workspace = true
alloy-rlp.workspace = true
op-alloy-network.workspace = true
op-alloy-consensus.workspace = true
op-alloy-rpc-types.workspace = true
snap.workspace = true

# config
figment = { workspace = true, features = ["toml", "env"] }

# self crates
helios-common = { path = "../common" }
helios-core = { path = "../core" }
helios-ethereum = { path = "../ethereum" }
helios-consensus-core = { path = "../ethereum/consensus-core" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# server
axum.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
# networking
libp2p = { workspace = true, features = ["macros", "tokio", "tcp", "mplex", "noise", "gossipsub", "ping"] }
discv5.workspace = true
libp2p-identity = { workspace = true, features = ["secp256k1"] }
unsigned-varint.workspace = true

[target.wasm32-unknown-unknown.dependencies]
parking_lot.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures.workspace = true
getrandom.workspace = true
